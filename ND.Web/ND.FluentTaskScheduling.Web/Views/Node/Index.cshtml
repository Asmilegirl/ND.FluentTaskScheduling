@model IEnumerable<ND.FluentTaskScheduling.Model.response.NodeDetailDto>
@using ND.FluentTaskScheduling.Model.enums
@using ND.FluentTaskScheduling.Model;
@using ND.FluentTaskScheduling.Helper
@{
    ViewBag.Title = "Index";
    List<ND.FluentTaskScheduling.Model.response.NodeDetailDto> nodelist = ViewBag.NodeList as List<ND.FluentTaskScheduling.Model.response.NodeDetailDto>;
    List<tb_user> userlist = ViewBag.UserList as List<tb_user>;
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<section class="content-header">
    <h1>
       节点列表
        <small>展示节点列表</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> 节点管理</a></li>
        <li><a href="#">节点列表</a></li>
    </ol>
</section>




<section class="content">
    <!--查询条件-->
  
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">检索条件</h3>
                <div class="box-tools pull-right">

                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>

            <div class="box-body">

                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label>节点创建起始时间:</label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="text" name="NodeCreateTimeRange" value="@ViewBag.NodeCreateTimeRange" class="form-control" id="reservation">
                            </div>
                        </div>

                    </div>


                    <div class="col-md-2">
                        <div class="form-group">
                            <label>监听命令队列状态</label>
                            <select class="form-control select2" name="ListenCommandQueueStatus" id="selListenCommandQueueStatus">
                                <option value="-1">全部</option>
                                @foreach (var o in (ND.FluentTaskScheduling.Helper.EnumHelper<RefreshCommandQueueStatus>.GetAllEnumsOfList2()))
                                {
                                    <option value="@o.Value" @((ViewBag.ListenCommandQueueStatus + "") == o.Value ? "selected='selected'" : "")>@o.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label>节点运行状态</label>
                            <select class="form-control select2" name="NodeRunStatus" id="selNodeRunStatus" data-placeholder="节点运行状态">
                                <option value="-1">全部</option>
                                @foreach (var o in (ND.FluentTaskScheduling.Helper.EnumHelper<NodeStatus>.GetAllEnumsOfList2()))
                                {
                                    <option value="@o.Value" @((ViewBag.NodeRunStatus + "") == o.Value ? "selected='selected'" : "")>@o.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label>节点名称:</label>
                            <select class="form-control select2" name="NodeId" id="selnodeid">
                                <option value="-1">全部</option>
                                @for (int i = 0; i < nodelist.Count; i++)
                                {
                                    <option value="@nodelist[i].NodeDetail.id" @((ViewBag.NodeId + "") == nodelist[i].NodeDetail.id.ToString() ? "selected='selected'" : "")>@nodelist[i].NodeDetail.nodename</option>
                                }
                            </select>
                            <!-- /.input group -->
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label>报警类型</label>
                            <select class="form-control select2" name="AlarmType" id="selAlarmType" data-placeholder="报警类型">
                                <option value="-1">全部</option>
                                @foreach (var o in (ND.FluentTaskScheduling.Helper.EnumHelper<ND.FluentTaskScheduling.Helper.AlarmType>.GetAllEnumsOfList2()))
                                {
                                    <option value="@o.Value" @((ViewBag.AlarmType + "") == o.Value ? "selected='selected'" : "")>@o.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label>创建人:</label>
                            <select class="form-control select2" name="CreateBy" id="selcreateby">
                                <option value="-1">全部</option>
                                @for (int i = 0; i < userlist.Count; i++)
                                {
                                    <option value="@userlist[i].id" @((ViewBag.CreateBy + "") == userlist[i].realname.ToString() ? "selected='selected'" : "")>@userlist[i].realname.ToString()</option>
                                }
                            </select>
                            <!-- /.input group -->
                        </div>
                    </div>

                </div>

            </div>

            <div class="box-footer">
                <a href="@Url.Action("add", "node")" class="btn margin-r-5 btn-info pull-right">新增</a>
                <button type="button" class="btn margin-r-5 btn-primary pull-right" id="btnSearchNodeList">查询</button>
            </div>

        </div>
    



    <div class="box box-default">
        <!--任务列表-->
        <div class="row">
            <div class="col-xs-12">

                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">节点展示列表</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <table id="tbNodeList" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>节点编号</th>
                                    <th>节点名称</th>
                                    <th>节点ip</th>
                                    <th>是否检查心跳</th>
                                    <th>是否启用报警</th>
                                    <th>报警类型</th>
                                    <th>报警人</th>
                                    <th>监听命令队列状态</th>
                                    <th>上次执行命令最大编号</th>
                                    <th>上次监听命令队列时间</th>
                                    <th>节点运行状态</th>

                                    <th>总任务数量</th>
                                    <th>总命令数量</th>
                                    <th>待执行命令数量</th>
                                    <th>节点上次心跳时间</th>
                                    <th>节点更新时间</th>
                                    <th>节点创建时间</th>
                                    <th>创建人</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                


                            </tbody>
                            <tfoot>

                            </tfoot>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    var tbl;
    $(function () {
        tbl = $('#tbNodeList').DataTable({
            "bFilter": false, //过滤功能
            "aoColumns": [
                { "bSortable": true, "data": "NodeDetail.id" },//节点编号
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<a class=\"node\"  href=\"../Node/Index?nodeid=" + full.NodeDetail.id + "\">" + full.NodeDetail.nodename + "</a>")
                        return html.join('');
                    }
                },
               { "bSortable": true, "data": "NodeDetail.nodeip" },//节点ip
              {
                  "mRender": function (mData, type, full) {
                      var html = [];
                      var htmldis = (full.NodeDetail.ifcheckstate == '1' ? "<span class=\"label label-success\">启用</span>" : "<span class=\"label label-danger\">未启用</span>");
                      html.push(htmldis)
                      return html.join('');
                  }
              },
               {
                   "mRender": function (mData, type, full) {
                       var html = [];
                       var htmldis = (full.NodeDetail.isenablealarm == '1' ? "<span class=\"label label-success\">启用</span>" : "<span class=\"label label-danger\">未启用</span>");
                       html.push(htmldis)
                       return html.join('');
                   }
               },
               {
                   "mRender": function (mData, type, full) {
                       if (full.NodeDetail.isenablealarm == '1') {
                           var html = [];
                           var dis = _G.StatusDiscription($("#selAlarmType option"), full.NodeDetail.alarmtype)
                           var htmldis = (full.NodeDetail.alarmtype == '@((int)AlarmType.Email)' ? "<span class=\"label label-success\">" + dis + "</span>" : "<span class=\"label label-warning\">" + dis + "</span>");
                           html.push(htmldis)
                           return html.join('');
                       } else { return "";}
                   }
               },
                {
                    "mRender": function (mData, type, full) {
                        if (full.NodeDetail.isenablealarm == '1') {
                            var html = [];
                            var dis = "";
                            $.each(full.NodeDetail.alarmuserid.split(","), function (k, v) {
                                dis = _G.StatusDiscription($("#selcreateby option"), v) + "," + dis
                            });

                            var htmldis = "<a class=\"label btn-dropbox\" href=\"\">" + dis.substring(0, dis.length - 1) + "</a>";
                            html.push(htmldis)
                            return html.join('');
                        } else { return "";}
                    }
                },


               {
                   "mRender": function (mData, type, full) {
                       var html = [];
                       html.push("<a  class=\"refreshqueuestatus_" + full.NodeDetail.refreshcommandqueuestatus + "\">" + _G.StatusDiscription($("#selListenCommandQueueStatus option"), full.NodeDetail.refreshcommandqueuestatus) + "</a>")
                       return html.join('');
                   }
               },
              
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        if (full.NodeDetail.lastmaxid == "-1") {
                            html.push(full.NodeDetail.lastmaxid);
                        }
                        else {
                            html.push("<a   href=\"../CommandQueue/Index?commandqueueid=" + full.NodeDetail.lastmaxid + "\">" + full.NodeDetail.lastmaxid + "</a>")
                        }
                        return html.join('');
                    }
                },
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<span>" + full.NodeDetail.lastrefreshcommandqueuetime.replace("T", " ") + "</span>");
                        return html.join('');
                    }
                },
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<a class=\"nodestatus_" + full.NodeDetail.nodestatus + "\"  >" + _G.StatusDiscription($("#selNodeRunStatus option"), full.NodeDetail.nodestatus) + "</a>")
                        return html.join('');
                    }
                },
                
                 {
                     "mRender": function (mData, type, full) {
                         var html = [];
                         html.push("<a class=\"badge btn-dropbox\"  href=\"../Task/Index?nodeid=" + full.NodeDetail.id + "\">" + full.TotalTaskCount + "</a>")
                         return html.join('');
                     }
                 },
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<a class=\"badge btn-google \"  href=\"../CommandQueue/Index?nodeid=" + full.NodeDetail.id + "&executestatus=\"-1\"\">" + full.TotalCommandCount + "</a>")
                        return html.join('');
                    }
                },
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<a class=\"badge btn-foursquare\"  href=\"../CommandQueue/Index?nodeid=" + full.NodeDetail.id + "&executestatus=" + '@((int)ExecuteStatus.NoExecute)' + "\">" + full.WaitCommandCount + "</a>")
                        return html.join('');
                    }
                },
                 { "data": "NodeDetail.nodelastupdatetime" },
                  { "data": "NodeDetail.nodelastmodifytime" },
                  { "data": "NodeDetail.createtime" },
                  {
                      "mRender": function (mData, type, full) {
                          var html = [];
                          html.push("<a class=\"label btn-dropbox\"   >" + _G.StatusDiscription($("#selcreateby option"), full.NodeDetail.createby) + "</a>")
                          return html.join('');
                      }
                  },
                {
                    "mRender": function (mData, type, full) {
                        var html = [];
                        html.push("<a href=\"../Node/Edit?nodeid=" + full.NodeDetail.id + "\"  class=\"btn  btn-sm btn-warning margin  \">编辑</a>")
                        html.push("<a href=\"../Log/NodeLog?nodeid=" + full.NodeDetail.id + "\"  class=\"btn  btn-sm bg-purple  \" >运行日志</a>")
                        return html.join('');
                    }
                },

            ],
            "paging": true,
            "lengthChange": false,
            // "searching": true,//是否允许Datatables开启本地搜索
            "ordering": false,//是否允许Datatables开启排序
            "info": true,//控制是否显示表格左下角的信息
            "autoWidth": true,//自动宽度
            "bProcessing": true, //DataTables载入数据时，是否显示‘进度’提示
            "bScrollCollapse": true, //是否开启DataTables的高度自适应，当数据条数不够分页数据条数的时候，插件高度是否随数据条数而改变
            "bPaginate": true, //是否显示（应用）分页器
            "bInfo": true, //是否显示页脚信息，DataTables插件左下角显示记录数
            "sPaginationType": "full_numbers", //详细分页组，可以支持直接跳转到某页
             "sScrollX": "100%",
             "scrollX": true,
            "iDisplayLength": 10,//默认显示
            "aLengthMenu": [10, 15, 20, 25, 50],//控制每页显示多少个
            "oLanguage": oLanguageData,
            "bServerSide": true,////指定服务端分页，必须的属性！
            "sAjaxSource": "Index",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "NodeId", "value": $("#selnodeid option:selected").val() });
                aoData.push({ "name": "NodeRunStatus", "value": $("#selNodeRunStatus option:selected").val() });
                aoData.push({ "name": "ListenCommandQueueStatus", "value": $("#selListenCommandQueueStatus option:selected").attr("value") });
                aoData.push({ "name": "NodeCreateTimeRange", "value": $("#reservation").val() });
                aoData.push({ "name": "AlarmType", "value": $("#selAlarmType option:selected").val() });
                aoData.push({ "name": "CreateBy", "value": $("#selcreateby option:selected").val() });

            },
            "fnServerData": function (sSource, aoData, fnCallback) {

                $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
                    "success": function (data) {
                        if (data == null) {
                            tbl.clear();
                            return;
                        }
                        fnCallback(data);
                    }
                });
            }

        });
        //点击查询
        $("#btnSearchNodeList").click(function () {
            tbl.clear();
            tbl.draw();
        });


    })
</script>